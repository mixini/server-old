//! SeaORM Entity. Generated by sea-orm-codegen 0.6.0

use super::sea_orm_active_enums::UserRole;
use oso::PolarClass;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize, PolarClass)]
#[sea_orm(table_name = "user_account")]
#[polar(class_name = "User")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    #[polar(attribute)]
    pub id: Uuid,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
    #[sea_orm(column_type = "Text")]
    #[polar(attribute)]
    pub name: String,
    #[polar(attribute)]
    pub email: String,
    #[polar(attribute)]
    pub role: UserRole,
    #[sea_orm(column_type = "Text")]
    pub password: String,
    #[polar(attribute)]
    pub verified: bool,
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}

crate::impl_redis_rv!(Model);
